{"version":3,"file":"static/js/257.63c4c4db.chunk.js","mappings":"6PAGMA,G,QAAgB,CAClBC,MAAO,YAMEC,EAAmB,WAC5B,OAAOC,EAAAA,GAAAA,KAAW,+EAAsEH,EAC3F,EACYI,EAAuB,WAChC,OAAOD,EAAAA,GAAAA,KAAW,wHAA+GH,EACpI,EACYK,EAAY,WACrB,OAAOF,EAAAA,GAAAA,KAAW,6EAAoEH,EACzF,EACYM,EAAa,WACtB,OAAOH,EAAAA,GAAAA,MAAY,4DAAmDH,EACzE,C,sMChBYO,EAAmBC,EAAAA,GAAAA,KAAH,6KAMhBC,EAAAA,GAAAA,QAMAC,EAA0BF,EAAAA,GAAAA,IAAH,+PACzBC,EAAAA,GAAAA,WAGAA,EAAAA,GAAAA,QAYEE,EAA0BH,EAAAA,GAAAA,IAAH,0OAIzBC,EAAAA,GAAAA,QAcEG,EAAyBJ,EAAAA,GAAAA,GAAH,qKAExBC,EAAAA,GAAAA,YAUEI,EAAgCL,EAAAA,GAAAA,QAAH,uMAY7BM,EAAiCN,EAAAA,GAAAA,GAAH,keAsB9BO,GAAWP,EAAAA,EAAAA,IAAOQ,EAAAA,GAAPR,CAAH,sJ,SChFRS,EAAe,WAAO,IAAD,QACxBC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA0BE,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KACMC,GAAWC,EAAAA,EAAAA,MAUjB,IARAC,EAAAA,EAAAA,YAAU,WACR,KACEC,EAAAA,EAAAA,IAAgBR,GAASS,KAAKL,EAG/B,CAFC,MAAOM,IACPtB,EAAAA,EAAAA,KACD,CACF,GAAE,CAACY,KAECG,EACH,OAAO,KAGT,IAAQQ,EACNR,EADMQ,YAAaC,EACnBT,EADmBS,MAAOC,EAC1BV,EAD0BU,aAAcC,EACxCX,EADwCW,SAAUC,EAClDZ,EADkDY,OAAQC,EAC1Db,EAD0Da,aAEtDC,GAAeC,EAAAA,EAAAA,IAAY,SAAUP,GACrCQ,EAAc,IAAIC,KAAKJ,GAAcK,cACrCC,EAAY,oBAAGjB,EAASkB,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,UAE7C,OACE,UAACnC,EAAD,YACE,iBAAMoC,MAAO,CAAEC,aAAc,QAA7B,UACE,SAAC,KAAD,CAAWC,GAAIL,EAAf,wBAEF,UAAC9B,EAAD,YACE,0BACE,gBAAKoC,IAAKX,EAAcY,IAAKjB,OAE/B,UAACnB,EAAD,YACE,0BACGmB,EADH,KACYO,EADZ,QAGA,wCAAgBN,EAAaiB,QAAQ,OACrC,sCACA,0BAAOhB,KACP,oCACA,SAACpB,EAAD,UACGqB,EAAOgB,KAAI,YAAmB,IAAhBC,EAAe,EAAfA,GAAIC,EAAW,EAAXA,KACjB,OAAO,wBAAcA,GAALD,EACjB,aAIP,UAACrC,EAAD,YACE,oDACA,UAACC,EAAD,YACE,yBACE,SAACC,EAAD,CAAU8B,GAAG,OAAOJ,MAAO,CAAEC,KAAI,UAAEnB,EAASkB,aAAX,aAAE,EAAgBC,MAAnD,qBAIF,yBACE,SAAC3B,EAAD,CAAU8B,GAAG,UAAUJ,MAAO,CAAEC,KAAI,UAAEnB,EAASkB,aAAX,aAAE,EAAgBC,MAAtD,2BAKJ,SAAC,EAAAU,SAAD,CAAUC,UAAU,SAAC,MAAD,UAAiBC,EAAAA,KAArC,UACE,SAAC,KAAD,CAAQC,QAASlC,WAK1B,C","sources":["components/Services/toasts.jsx","pages/MovieDetails/MovieDetails.styled.jsx","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst toastSettings = {\n    theme: \"colored\",\n};\n\nexport const toastSuccess = () => {\n    return toast.success(\"Hooray! We found what you were looking for ðŸ¤—\", toastSettings);\n};\nexport const toastInfoNothing = () => {\n    return toast.info(\"It looks like you want to find nothing, please check your query ðŸ˜•\", toastSettings);\n};\nexport const toastInfoDuplication = () => {\n    return toast.info(\"It looks like there are already movies found for your request, please check if this will be a new search ðŸ¤”\", toastSettings); \n};\nexport const toastWarn = () => {\n    return toast.warn(\"Sorry, nothing was found for your request, try something else ðŸ™ˆ\", toastSettings); \n};\nexport const toastError = () => {\n    return toast.error(\"Oops, something went wrong, please try again ðŸ™Š\", toastSettings);\n};\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\nimport { device } from 'components/GlobalStyles';\n\n\nexport const MovieDetailsMain = styled.main`\n  max-width: 1600px;\n  margin: 0 auto;\n  padding: 0 16px;\n  span {\n    display: block;\n    @media ${device.tablet} {\n      margin-bottom: 32px;\n    }\n  }\n`;\n\nexport const MovieDetailsMainWrapper = styled.div`\n  @media ${device.mobileOnly} {\n    text-align: center;\n  }\n  @media ${device.tablet} {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n  }\n  img {\n    display: inline-block;\n    max-height: 500px;\n    max-width: 400px;\n  }\n`;\n\nexport const MovieDetailsInfoWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 32px;\n  @media ${device.tablet} {\n    margin-left: 32px;\n  }\n  h2 {\n    color: #3617fb;\n  }\n  h3 {\n    color: #3617fb;\n  }\n  span {\n    max-width: 1200px;\n  }\n`;\n\nexport const MovieDetailsGenresList = styled.ul`\n  display: flex;\n  @media ${device.mobileOnly} {\n    justify-content: center;\n  }\n  li {\n    &:not(:first-child) {\n      margin-left: 16px;\n    }\n  }\n`;\n\nexport const MovieDetailsAdditionalWrapper = styled.section`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  max-width: 1600px;\n  margin: 32px auto;\n  h3 {\n    color: #3617fb;\n  }\n`;\n\nexport const MovieDetailsAdditionalNavigate = styled.ul`\n  display: flex;\n  justify-content: center;\n  margin-bottom: 32px;\n  li {\n    margin-top: 16px;\n    padding: 8px;\n    border-radius: 8px;\n    border: 2px solid black;\n    background-color: #3498db;\n    &:not(:first-child) {\n      margin-left: 16px;\n    }\n    transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n    &:hover {\n      transform: scale(1.15);\n      box-shadow: 0px 5px 10px bisque;\n      background-color: #34dbc59e;\n    }\n  }\n`;\n\nexport const NavTitle = styled(NavLink)`\n  padding: 8px;\n  color: white;\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover {\n    color: black;\n  }\n`;\n\n","import { useState, useEffect, Suspense } from 'react';\nimport { Outlet, useLocation, useParams } from 'react-router-dom';\nimport { getMovieDetails, checkImages } from 'components/Services/fetchMovies';\nimport { toastError } from 'components/Services/toasts';\nimport { ProgressBar } from 'react-loader-spinner';\nimport { ProgressBarStyle } from 'components/Services/fetchMovies';\nimport {\n  MovieDetailsMain,\n  MovieDetailsMainWrapper,\n  MovieDetailsInfoWrapper,\n  MovieDetailsGenresList,\n  MovieDetailsAdditionalWrapper,\n  MovieDetailsAdditionalNavigate,\n  NavTitle,\n} from './MovieDetails.styled';\nimport { NavButton } from 'components/GlobalStyles';\n\nexport const MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState(null);\n  const location = useLocation();\n\n  useEffect(() => {\n    try {\n      getMovieDetails(movieId).then(setMovie);\n    } catch (error) {\n      toastError();\n    }\n  }, [movieId]);\n\n  if (!movie) {\n    return null;\n  }\n\n  const { poster_path, title, vote_average, overview, genres, release_date } =\n    movie;\n  const imgForPoster = checkImages('poster', poster_path);\n  const releaseDate = new Date(release_date).getFullYear();\n  const backLinkHref = location.state?.from ?? '/movies';\n\n  return (\n    <MovieDetailsMain>\n      <span style={{ marginBottom: '26px' }}>\n        <NavButton to={backLinkHref}>Go back</NavButton>\n      </span>\n      <MovieDetailsMainWrapper>\n        <div>\n          <img src={imgForPoster} alt={title} />\n        </div>\n        <MovieDetailsInfoWrapper>\n          <h2>\n            {title} ({releaseDate})\n          </h2>\n          <p>User score: {vote_average.toFixed(1)}</p>\n          <h3>Overview</h3>\n          <span>{overview}</span>\n          <h3>Genres</h3>\n          <MovieDetailsGenresList>\n            {genres.map(({ id, name }) => {\n              return <li key={id}>{name}</li>;\n            })}\n          </MovieDetailsGenresList>\n        </MovieDetailsInfoWrapper>\n      </MovieDetailsMainWrapper>\n      <MovieDetailsAdditionalWrapper>\n        <h3>Additional information</h3>\n        <MovieDetailsAdditionalNavigate>\n          <li>\n            <NavTitle to=\"cast\" state={{ from: location.state?.from }}>\n              Cast\n            </NavTitle>\n          </li>\n          <li>\n            <NavTitle to=\"reviews\" state={{ from: location.state?.from }}>\n              Reviews\n            </NavTitle>\n          </li>\n        </MovieDetailsAdditionalNavigate>\n        <Suspense fallback={<ProgressBar {...ProgressBarStyle} />}>\n          <Outlet context={movie} />\n        </Suspense>\n      </MovieDetailsAdditionalWrapper>\n    </MovieDetailsMain>\n  );\n};"],"names":["toastSettings","theme","toastInfoNothing","toast","toastInfoDuplication","toastWarn","toastError","MovieDetailsMain","styled","device","MovieDetailsMainWrapper","MovieDetailsInfoWrapper","MovieDetailsGenresList","MovieDetailsAdditionalWrapper","MovieDetailsAdditionalNavigate","NavTitle","NavLink","MovieDetails","movieId","useParams","useState","movie","setMovie","location","useLocation","useEffect","getMovieDetails","then","error","poster_path","title","vote_average","overview","genres","release_date","imgForPoster","checkImages","releaseDate","Date","getFullYear","backLinkHref","state","from","style","marginBottom","to","src","alt","toFixed","map","id","name","Suspense","fallback","ProgressBarStyle","context"],"sourceRoot":""}