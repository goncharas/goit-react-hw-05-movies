{"version":3,"file":"static/js/691.342a75e5.chunk.js","mappings":"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","sources":["components/FilmList/FilmList.styled.jsx","components/FilmList/FilmsList.jsx","components/Services/toasts.jsx","pages/Movies/Movies.styled.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const FilmListSection = styled.main`\n  height: 100%;\n  margin-bottom: 32px;\n`;\n\nexport const FilmListStyled = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  gap: 32px;\n  \n`;\n\nexport const FilmListWrapper = styled.div`\n  text-align: center;\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover {\n    transform: scale(1.07);\n  }\n`;\n\nexport const FilmListTitle = styled.p`\n  padding-top: 16px;\n  font-weight: 700px;\n  font-size: 16px;\n  color: black;\n  \n`;\n","import PropTypes from 'prop-types';\nimport { Link, useLocation } from 'react-router-dom';\nimport { checkImages } from 'components/Services/fetchMovies';\nimport {\n  FilmListSection,\n  FilmListStyled,\n  FilmListWrapper,\n  FilmListTitle,\n} from './FilmList.styled';\n\nexport const FilmsList = ({ data }) => {\n  const location = useLocation();\n\n  return (\n    <FilmListSection>\n      <FilmListStyled>\n        {data.map(({ id, title, poster_path }) => {\n          const imgForPoster = checkImages('poster', poster_path);\n          return (\n            <li key={id}>\n              <Link to={`/movies/${id}`} state={{ from: location }}>\n                <FilmListWrapper>\n                  <img src={imgForPoster} alt={title} />\n                  <FilmListTitle>{title}</FilmListTitle>\n                </FilmListWrapper>\n              </Link>\n            </li>\n          );\n        })}\n      </FilmListStyled>\n    </FilmListSection>\n  );\n};\n\nFilmsList.propTypes = {\n  data: PropTypes.array.isRequired,\n};\n","import { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst toastSettings = {\n    theme: \"colored\",\n};\n\nexport const toastSuccess = () => {\n    return toast.success(\"Hooray! We found what you were looking for ðŸ¤—\", toastSettings);\n};\nexport const toastInfoNothing = () => {\n    return toast.info(\"It looks like you want to find nothing, please check your query ðŸ˜•\", toastSettings);\n};\nexport const toastInfoDuplication = () => {\n    return toast.info(\"It looks like there are already movies found for your request, please check if this will be a new search ðŸ¤”\", toastSettings); \n};\nexport const toastWarn = () => {\n    return toast.warn(\"Sorry, nothing was found for your request, try something else ðŸ™ˆ\", toastSettings); \n};\nexport const toastError = () => {\n    return toast.error(\"Oops, something went wrong, please try again ðŸ™Š\", toastSettings);\n};\n","import styled from 'styled-components';\n\nexport const SearchBar = styled.section`\n  display: flex;\n  flex-wrap: wrap;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  min-height: 64px;\n  padding-top: 16px;\n  padding-right: 32px;\n  padding-bottom: 16px;\n  padding-left: 32px;\n`;\n\nexport const SearchForm = styled.form`\n  display: flex;\n  align-items: center;\n  overflow: hidden;\n  width: 100%;\n  max-width: 600px;\n  background-color: #3498db7d;\n  border: 2px solid #43086b;\n  border-radius: 4px;\n`;\n\nexport const SearchFormButton = styled.button`\n  display: inline-block;\n  width: 48px;\n  height: 48px;\n  border: 0;\n  opacity: 0.6;\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n  background-color: #3498dbe0;\n  &:hover {\n    opacity: 1;\n  }\n`;\n\nexport const SearchFormInput = styled.input`\n  display: inline-block;\n  width: 100%;\n  font: inherit;\n  font-size: 16px;\n  border: none;\n  outline: none;\n  padding-left: 16px;\n  padding-right: 16px;\n  background-color: initial;\n  &::placeholder {\n    font: inherit;\n    font-size: 16px;\n  }\n`;\n","import { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { getSearchMovie } from 'components/Services/fetchMovies';\nimport {FilmsList} from 'components/FilmList/FilmsList';\nimport { SearchBar, SearchForm, SearchFormButton, SearchFormInput } from 'pages/Movies/Movies.styled';\nimport { toastInfoNothing, toastInfoDuplication, toastWarn, toastError } from 'components/Services/toasts';\nimport { ProgressBar } from 'react-loader-spinner';\nimport { ProgressBarStyle } from 'components/Services/fetchMovies';\nimport { Error } from 'components/Error';\nimport img from 'components/Images/404-Error-Websites.jpg';\n\nexport const Movies = () => {\n    const [text, setText] = useState('');\n    const [movies, setMovies] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(false);\n    const [searchParams, setSearchParams] = useSearchParams();\n  \n  const searchQuery = searchParams.get('query') ?? '';\n  \n  const nextParams = text !== '' ? { query: text } : {};\n\n  const inputText = event => {\n    setText(event.currentTarget.value);\n  }\n\n    const searchFilms = event => {\n      event.preventDefault();\n      if (text.trim() === '') {\n        return toastInfoNothing();\n      }\n      if (text === searchQuery.trim()) {\n        return toastInfoDuplication();\n      }\n      setMovies([]);\n      setSearchParams(nextParams);\n      setText('');\n    };\n\n    \n\n    useEffect(() => {\n      if (!searchQuery) {\n        return;\n      }\n      setLoading(true);\n      try {\n        getSearchMovie(searchQuery)\n          .then(({ total_results, results }) => {\n            if (total_results === 0) {\n              toastWarn();\n              setLoading(false);\n              setError(true);\n              return;\n            }\n            \n            const onlyNeedValues = results.map(\n              ({\n                id,\n                poster_path,\n                title,\n                vote_average,\n                overview,\n                genres,\n                release_date,\n              }) => ({\n                id,\n                poster_path,\n                title,\n                vote_average,\n                overview,\n                genres,\n                release_date,\n              })\n            );\n            setMovies([...onlyNeedValues]);\n            setLoading(false);\n            setError(false);\n          })\n          .finally(() => {\n            setLoading(false);\n          });\n      } catch (error) {\n        toastError();\n      }\n    }, [searchQuery]);\n\n\n  return (\n    <main style={{ flexGrow: '1' }}>\n      <SearchBar>\n        <SearchForm onSubmit={searchFilms}>\n          <SearchFormInput\n            type=\"text\"\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Search films\"\n            name=\"text\"\n            value={text}\n            onChange={inputText}\n          />\n          <SearchFormButton type=\"submit\">\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              width=\"14\"\n              height=\"14\"\n              fill=\"currentColor\"\n              viewBox=\"0 0 32 32\"\n            >\n              <path d=\"M31.008 27.231l-7.58-6.447c-0.784-0.705-1.622-1.029-2.299-0.998 1.789-2.096 2.87-4.815 2.87-7.787 0-6.627-5.373-12-12-12s-12 5.373-12 12 5.373 12 12 12c2.972 0 5.691-1.081 7.787-2.87-0.031 0.677 0.293 1.515 0.998 2.299l6.447 7.58c1.104 1.226 2.907 1.33 4.007 0.23s0.997-2.903-0.23-4.007zM12 20c-4.418 0-8-3.582-8-8s3.582-8 8-8 8 3.582 8 8-3.582 8-8 8z\"></path>\n            </svg>\n          </SearchFormButton>\n        </SearchForm>\n        {loading && <ProgressBar {...ProgressBarStyle} />}\n      </SearchBar>\n      {movies !== null && <FilmsList data={movies} />}\n      {error && <Error errorImg={img} />}\n    </main>\n  );\n};\n"],"names":["FilmListSection","styled","FilmListStyled","FilmListWrapper","FilmListTitle","FilmsList","data","location","useLocation","map","id","title","poster_path","imgForPoster","checkImages","to","state","from","src","alt","toastSettings","theme","toastInfoNothing","toast","toastInfoDuplication","toastWarn","toastError","SearchBar","SearchForm","SearchFormButton","SearchFormInput","Movies","useState","text","setText","movies","setMovies","loading","setLoading","error","setError","useSearchParams","searchParams","setSearchParams","searchQuery","get","nextParams","query","useEffect","getSearchMovie","then","total_results","results","onlyNeedValues","vote_average","overview","genres","release_date","finally","style","flexGrow","onSubmit","event","preventDefault","trim","type","autoComplete","autoFocus","placeholder","name","value","onChange","currentTarget","xmlns","width","height","fill","viewBox","d","ProgressBarStyle","Error","errorImg","img"],"sourceRoot":""}